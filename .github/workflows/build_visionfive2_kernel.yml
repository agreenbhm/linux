name: Build VF2 Kernel

permissions:
  contents: write
  
on:
  #push:
  #  branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    
    container:
      image: tuxmake/riscv_gcc:latest
      options: --user root
      
    steps:
    
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: master
      
    - name: Install dependencies
      run: apt update && apt install -y build-essential debhelper #gcc-riscv64-linux-gnu
      
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      
    - name: Make visionfive2_defconfig
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        make CROSS_COMPILE=riscv64-linux-gnu- ARCH=riscv visionfive2_docker_defconfig
        
    - name: Generate release tag
      id: tag
      run: |
        echo "::set-output name=release_tag::Build_$(date +"%Y.%m.%d_%H-%M")"
        
    - name: Configure LOCALVERSION
      run: | 
        sed -i 's/.*LOCALVERSION.*//g' .config
        echo CONFIG_LOCALVERSION=\"${{ steps.tag.outputs.release_tag }}\" >> .config

    - name: Make kernel
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        make CROSS_COMPILE=riscv64-linux-gnu- ARCH=riscv -j`nproc`
      
    - name: Make modules
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        make CROSS_COMPILE=riscv64-linux-gnu- ARCH=riscv -j`nproc` modules

    - name: Build .deb packages
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        make CROSS_COMPILE=riscv64-linux-gnu- ARCH=riscv bindeb-pkg
      
    - name: Copy .deb to /tmp
      run: cp ../*.deb /tmp/
      
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v3
      with:
        name: compiled_vf2_debs
        path: /tmp/*.deb
        retention-days: 5
    
  #  - name: Generate release tag
  #    id: tag
  #    run: |
  #      echo "::set-output name=release_tag::$(basename /tmp/linux-image-* | cut -d'_' -f2)"
        
   # - name: Release
   #   uses: softprops/action-gh-release@v1
   #   env:
   #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
   #   with:
   #     tag_name: ${{ steps.tag.outputs.release_tag }}
   #     body: Automated build of VisionFive 2 kernel .debs for Ubuntu.
   #     files: |
   #       /tmp/*.deb
  
  Update_Repo:
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [build]
    uses: ./.github/workflows/update_repo.yml
    
  Release_Kernel:
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [build]
    uses: ./.github/workflows/release_vf2_kernel.yml
